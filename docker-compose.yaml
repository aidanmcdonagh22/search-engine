version: "3"
services:

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: yarn react-scripts start
    env_file: .env
    networks:
      - search-engine
    volumes:
      - ./frontend:/usr/src/app
    restart: unless-stopped
    stdin_open: true

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - database
      - cache
    env_file: .env
    command: yarn run start:dev
    networks:
      - search-engine
    volumes:
      - ./backend:/usr/src/app
    restart: unless-stopped

  database:
    container_name: database
    image: "mongo:latest"
    env_file: .env
    ports:
      - "27017:27017"
    networks:
      - search-engine
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo database:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  mongo_seed:
    container_name: mongo_seed
    env_file: .env
    build:
      context: ./mongo
      dockerfile: ./Dockerfile
    networks:
      - search-engine
    depends_on:
      database:
        condition: service_healthy


  cache:
    container_name: cache
    image: "redis:latest"
    env_file: .env
    ports:
      - "6379:6379"
    networks:
      - search-engine
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

networks:
  search-engine: